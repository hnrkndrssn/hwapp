step "run-a-script" {
    name = "Run a Script"

    action {
        action_type = "Octopus.Script"
        channels = ["hotfix"]
        properties = {
            Octopus.Action.Script.ScriptBody = "Write-Host \"Hello, World!\""
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
        }
        worker_pool = "default-worker-pool"
    }
}

step "template-with-default-parameter-value-test" {
    name = "Template with default parameter value test"

    action {
        environments = ["local"]
        properties = {
            Octopus.Action.Template.Id = "ActionTemplates-101"
            Octopus.Action.Template.Version = "8"
            Parameter1 = "default2"
        }
        worker_pool = "default-worker-pool"
    }
}

step "deploy-a-package" {
    name = "Deploy a Package"
    properties = {
        Octopus.Action.TargetRoles = "azure"
    }

    action {
        action_type = "Octopus.TentaclePackage"
        excluded_environments = ["local"]
        properties = {
            Octopus.Action.EnabledFeatures = ",Octopus.Features.ConfigurationTransforms,Octopus.Features.ConfigurationVariables"
            Octopus.Action.Package.AutomaticallyRunConfigurationTransformationFiles = "True"
            Octopus.Action.Package.AutomaticallyUpdateAppSettingsAndConnectionStrings = "True"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "art"
            Octopus.Action.Package.PackageId = "dotnettest"
            Octopus.Action.RunOnServer = "false"
        }
        worker_pool_variable = ""

        packages {
            acquisition_location = "Server"
            feed = "art"
            package_id = "dotnettest"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }
}

step "run-a-script-from-git" {
    name = "Run a Script from Git"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Script.ScriptFileName = "Scripts/MyScript.sh"
            Octopus.Action.Script.ScriptSource = "GitRepository"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "default-worker-pool"

        container {
            git_url = "https://github.com/hnrkndrssn/hwapp/blob/main/docker/linux/Dockerfile"
        }

        git_dependencies {
            default_branch = "main"
            git_credential_id = "GitCredentials-1"
            git_credential_type = "Library"
            repository_uri = "https://github.com/hnrkndrssn/hwapp.git"
        }
    }
}

step "deploy-a-helm-chart" {
    name = "Deploy a Helm Chart"
    properties = {
        Octopus.Action.TargetRoles = "k8s"
    }

    action {
        action_type = "Octopus.HelmChartUpgrade"
        properties = {
            Octopus.Action.GitRepository.Source = "Project"
            Octopus.Action.Helm.ChartDirectory = "/helm"
            Octopus.Action.Helm.ResetValues = "True"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""

        packages "nginx" {
            acquisition_location = "NotAcquired"
            feed = "docker-hub"
            package_id = "nginx"
            properties = {
                Extract = "False"
                Purpose = "DockerImageReference"
                SelectionMode = "immediate"
            }
        }
    }
}

step "run-an-aws-cli-script" {
    name = "Run an AWS CLI Script"

    action {
        action_type = "Octopus.AwsRunScript"
        properties = {
            Octopus.Action.Aws.AssumeRole = "False"
            Octopus.Action.Aws.Region = "ap-southeast-2"
            Octopus.Action.AwsAccount.UseInstanceRole = "False"
            Octopus.Action.AwsAccount.Variable = "TestAccount"
            Octopus.Action.Script.ScriptBody = "echo \"hello\""
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
            OctopusUseBundledTooling = "False"
        }
        worker_pool_variable = ""
    }
}